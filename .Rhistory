df <- occ
if (nrow(df) > limit) {
p <- df[1 : limit, ]
} else {
p <- df
}
p <- p %>% select(Jobs, Median_Annual_2017)
p <- p %>% arrange(Median_Annual_2017)
p[Median_Annual_2017 == ">=$208,000"] <- "208000"
p[Median_Annual_2017 == "—"] <- "0"
p$Median_Annual_2017 <- as.numeric(p$Median_Annual_2017)
p <- p %>%
plot_ly(
x = ~Jobs,
y = ~Median_Annual_2017,
type = "bar",
mode = "markers",
color = "plum"
)
p
df <- occ
df <- df %>% arrange(Median_Annual_2017)
limit <- 50
View(df)
df <- df %>% arrange(Median_Annual_2017)
if (nrow(df) > limit) {
p <- df[1 : limit, ]
} else {
p <- df
}
View(p)
p <- p %>% select(Jobs, Median_Annual_2017)
p <- p %>% arrange(Median_Annual_2017)
p[Median_Annual_2017 == ">=$208,000"] <- "208000"
p[Median_Annual_2017 == "—"] <- "0"
p[p == ">=$208,000"] <- "208000"
p[p == "—"] <- "0"
p$Median_Annual_2017 <- as.numeric(p$Median_Annual_2017)
p <- p %>%
plot_ly(
x = ~Jobs,
y = ~Median_Annual_2017,
type = "bar",
mode = "markers",
color = "plum"
)
p
limit <- 50
df <- occ
df <- df %>% arrange(Median_Annual_2017)
if (nrow(df) > limit) {
p <- df[1 : limit, ]
} else {
p <- df
}
p <- p %>% select(Jobs, Median_Annual_2017)
p <- p %>% arrange(Median_Annual_2017)
p[p == ">=$208,000"] <- "208000"
p$Median_Annual_2017 <- as.numeric(p$Median_Annual_2017)
p <- p %>%
plot_ly(
x = ~Jobs,
y = ~Median_Annual_2017,
type = "bar",
mode = "markers",
color = "plum"
)
p
limit <- 30
df <- occ
df <- df %>% arrange(Median_Annual_2017)
if (nrow(df) > limit) {
p <- df[1 : limit, ]
} else {
p <- df
}
p <- p %>% select(Jobs, Median_Annual_2017)
p <- p %>% arrange(Median_Annual_2017)
p[p == ">=$208,000"] <- "208000"
p$Median_Annual_2017 <- as.numeric(p$Median_Annual_2017)
p <- p %>%
plot_ly(
x = ~Jobs,
y = ~Median_Annual_2017,
type = "bar",
mode = "markers",
color = "plum"
)
p
limit <- 30
df <- occ
df <- df %>% arrange(Median_Annual_2017) %>% filter(Median_Annual_2017 != "—")
if (nrow(df) > limit) {
p <- df[1 : limit, ]
} else {
p <- df
}
p <- p %>% select(Jobs, Median_Annual_2017)
p <- p %>% arrange(Median_Annual_2017)
p[p == ">=$208,000"] <- "208000"
p$Median_Annual_2017 <- as.numeric(p$Median_Annual_2017)
p <- p %>%
plot_ly(
x = ~Jobs,
y = ~Median_Annual_2017,
type = "bar",
mode = "markers",
color = "plum"
)
p
source('C:/Users/sAdmin/Desktop/Classwork/Info 201/info201-final-dane/scripts/projection_graph.R')
median_wage_comparison(occ, 40)
p$Median_Annual_2017 <- as.numeric(p$Median_Annual_2017)
p <- p %>%
plot_ly(
x = ~Jobs,
y = ~Median_Annual_2017,
type = "bar",
mode = "markers",
color = "plum") %>%
layout(title = "2017 Annual Median Wage Between Occupation Groups",
barmode = "group",
xaxis = list(title = "Jobs"),
yaxis = list(title = "Median Annual Wage"))
source('C:/Users/sAdmin/Desktop/Classwork/Info 201/info201-final-dane/scripts/projection_graph.R')
median_wage_comparison(occ, 40)
median_wage_comparison(occ, 20)
employment_projection_chart(occ, 20)
occ <- occ[1 : 20, ]
median_wage_comparison(occ, 40)
median_wage_comparison(occ, 50)
median_wage_comparison(occ, 1000)
source('C:/Users/sAdmin/Desktop/Classwork/Info 201/info201-final-dane/scripts/projection_graph.R')
median_wage_comparison(occ, 1000)
median_wage_comparison(occ, 50)
source("scripts/projection_data_wrangling.R")
source("Scripts/UW_major_wrangling.R")
occ_summary <- filter(data[2 : nrow(data), ], Occupation_Type == "Summary")
occ_major <-  filter(occ_summary, layer2 == "0" & layer3 == "000")
occ_groups <- filter(occ_summary, !(layer2 == "0" & layer3 == "000"))
occ <- filter(data[2 : nrow(data), ], Occupation_Type == "Line item")
all_const <- uw_major_data[1,1]
occ_summary <- rbind(c("All",NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA), occ_summary)
occ_major <- rbind(c("All",NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA), occ_major)
occ_groups <- rbind(c("All",NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA), occ_groups)
source('C:/Users/sAdmin/Desktop/Classwork/Info 201/info201-final-dane/scripts/projection_graph.R')
median_wage_comparison(occ, 50)
median_wage_comparison(occ, 1000)
as.numeric("867raghg")
runApp()
runApp()
runApp()
runApp()
runApp()
View(extract_row_occ)
employment_projection_chart(extract_row_occ, limit)
runApp()
runApp()
q()
runApp()
runApp()
install.packages("shinydashboard")
runApp()
runApp()
runApp()
runApp()
runApp()
employment_projection <- tabItem(
tabName = "projection_tab",
titlePanel("2016 - 2026 Occupational Projection"),
# verticalLayout(
#   sidebarLayout(
#
#     sidebarPanel(
# textInput(inputId = "UW_major_text",
#           label = "Please type in your major:",
#           value = NULL),
#
# selectInput(inputId = "UW_major_dropdown",
#             label = "Please select your major:",
#             choices = unique(uw_major_data$Major),
#             selected = "All"),
#
# selectInput(inputId = "occ_major",
#             label = "Please select a type of occupation (Suggested based on your major):",
#             choices = unique(occ_major$Jobs),
#             selected = "All"),
#       # selectInput(inputId = "occ_group",
#             label = "Please select an occupational group:",
#             choices = unique(occ_groups$Jobs),
#             selected = "Top executives")
#
#
#
#     ),
#
#     mainPanel(
#       plotOutput("employment_projection")
#     )
#   ),
#
# selectInput(inputId = "occ",
#             label = "Please select a specific occupation:",
#             choices = unique(occ$Jobs),
#             selected = "Chief executives"),
#
# textInput(inputId = "limit_text",
#           label = "Please type in a limit for how many data point is displayed on graph (Default is 20):",
#           value = "20")
#
# )
fluidRow(
box(width = 4,
title = "Widget",
#status = "warning",
solidHeader = TRUE,
textInput(inputId = "UW_major_text",
label = "Please type in your major:",
value = NULL),
selectInput(inputId = "UW_major_dropdown",
label = "Please select your major:",
choices = unique(uw_major_data$Major),
selected = "All"),
selectInput(inputId = "occ_major",
label = "Please select a type of occupation (Suggested based on your major):",
choices = unique(occ_major$Jobs),
selected = "All"),
selectInput(inputId = "occ_group",
label = "Please select an occupational group:",
choices = unique(occ_groups$Jobs),
selected = "Top executives"),
selectInput(inputId = "occ",
label = "Please select a specific occupation:",
choices = unique(occ$Jobs),
selected = "Chief executives"),
textInput(inputId = "limit_text",
label = "Please type in a limit for how many data point is displayed on graph (Default is 20):",
value = "20")
),
box(title = "Plot",
status = "primary",
#width = 8,
solidHeader = TRUE,
plotlyOutput("employment_projection")
)
)
)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View("images/Banchelor_Husky.PNG")
img(src = "images/Banchelor_Husky.PNG")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
source('C:/Users/sAdmin/Desktop/Classwork/Info 201/info201-final-dane/scripts/projection_graph.R')
rm(ls())
rm(list(ls())
)
ls()
list(ls())
rm(list(ls()))
source('C:/Users/sAdmin/Desktop/Classwork/Info 201/info201-final-dane/scripts/projection_graph.R')
View(occ)
df <- occ
job <- "Actors"
job_row <- df %>% filter(Jobs == job)
df[df == ">=$208,000"] <- "208000"
all_job_mean <- mean(df$Jobs)
all_job_mean <- df$Jobs %>% mean()
all_job_mean <- df %>% mutate(mean = mean(Jobs))
View(all_job_mean)
source('C:/Users/sAdmin/Desktop/Classwork/Info 201/info201-final-dane/scripts/projection_graph.R')
job_row <- df %>% filter(Jobs == job)
df[df == ">=$208,000"] <- "208000"
all_job_mean <- df %>% mutate(mean = mean(Median_Annual_2017))
df <- occ
job <- "Actors"
job_row <- df %>% filter(Jobs == job)
df[df == ">=$208,000"] <- "208000"
all_job_mean <- df %>% mutate(mean = mean(Median_Annual_2017))
source('C:/Users/sAdmin/Desktop/Classwork/Info 201/info201-final-dane/scripts/projection_graph.R')
job_row <- df %>% filter(Jobs == job)
df[df == ">=$208,000"] <- "208000"
all_job_mean <- df %>% mutate(Mean = mean(as.numeric(Median_Annual_2017)))
View(all_job_mean)
source('C:/Users/sAdmin/Desktop/Classwork/Info 201/info201-final-dane/scripts/projection_graph.R')
job_row <- df %>% filter(Jobs == job)
df[df == ">=$208,000"] <- "208000"
all_job_mean <- df %>%
filter(Median_Annual_2017 != "—") %>%
mutate(Mean = mean(as.numeric(Median_Annual_2017)))
View(all_job_mean)
job_row <- df %>% filter(Jobs == job)
df[df == ">=$208,000"] <- "208000"
all_job_mean <- df %>%
filter(Median_Annual_2017 != "—") %>%
mutate(Mean = mean(as.numeric(Median_Annual_2017)))
all_job_mean <- as.numeric(all_job_mean[1, ]$Mean)
all_job_mean
source('C:/Users/sAdmin/Desktop/Classwork/Info 201/info201-final-dane/scripts/projection_graph.R')
source("global.R")
occ[occ == ">=$208,000"] <- "208000"
all_job_mean <- occ %>%
filter(Median_Annual_2017 != "—") %>%
mutate(Mean = mean(as.numeric(Median_Annual_2017)))
all_job_mean <- as.numeric(all_job_mean[1, ]$Mean)
source('C:/Users/sAdmin/Desktop/Classwork/Info 201/info201-final-dane/scripts/projection_graph.R')
source('C:/Users/sAdmin/Desktop/Classwork/Info 201/info201-final-dane/scripts/projection_graph.R')
runApp()
runApp()
runApp()
runApp()
unique(occ$Entry_Education)
unique(occ$Work_Experience)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
all_job_mean <- 516
all_job_mean <- occ %>%
filter(Median_Annual_2017 != "—") %>%
mutate(Mean = mean(as.numeric(Median_Annual_2017)))
all_job_mean <- as.numeric(all_job_mean[1, ]$Mean)
all_job_mean <- occ %>%
filter(Median_Annual_2017 != "—") %>%
mutate(Mean = mean(as.numeric(Median_Annual_2017)))
all_job_mean <- as.numeric(all_job_mean[1, ]$Mean)
all_job_mean <- df %>%
filter(Median_Annual_2017 != "—") %>%
mutate(Mean = mean(as.numeric(Median_Annual_2017)))
View(all_job_mean)
all_job_mean <- as.numeric(all_job_mean[1, ]$Mean)
View(df)
all_job_mean <- df %>%
filter(Median_Annual_2017 != "—") %>%
mutate(Mean = mean(as.numeric(Median_Annual_2017)))
all_job_mean <- as.numeric(all_job_mean[1, ]$Mean)
all_job_mean <- occ %>%
filter(Median_Annual_2017 != "—") %>%
mutate(Mean = mean(as.numeric(Median_Annual_2017)))
all_job_mean <- as.numeric(all_job_mean[1, ]$Mean)
all_job_mean <- df %>%
filter(Median_Annual_2017 != "—") %>%
mutate(Mean = mean(as.numeric(Median_Annual_2017)))
all_job_mean <- as.numeric(all_job_mean[1, ]$Mean)
all_job_mean <- occ %>%
filter(Median_Annual_2017 != "—") %>%
mutate(Mean = mean(as.numeric(Median_Annual_2017)))
all_job_mean <- as.numeric(all_job_mean[1, ]$Mean)
df <- occ
all_job_mean <- df %>%
filter(Median_Annual_2017 != "—") %>%
mutate(Mean = mean(as.numeric(Median_Annual_2017)))
all_job_mean <- as.numeric(all_job_mean[1, ]$Mean)
df[df == ">=$208,000"] <- "208000"
all_job_mean <- df %>%
filter(Median_Annual_2017 != "—") %>%
mutate(Mean = mean(as.numeric(Median_Annual_2017)))
all_job_mean <- as.numeric(all_job_mean[1, ]$Mean)\
all_job_mean <- df %>%
filter(Median_Annual_2017 != "—") %>%
mutate(Mean = mean(as.numeric(Median_Annual_2017)))
all_job_mean <- as.numeric(all_job_mean[1, ]$Mean)
df <- occ
job <- Jobs
job <- "Jobs"
job_row <- df %>% filter(Jobs == job)
##Getting the mean of all Jobs
df[df == ">=$208,000"] <- "208000"
all_job_mean <- df %>%
filter(Median_Annual_2017 != "—") %>%
mutate(Mean = mean(as.numeric(Median_Annual_2017)))
all_job_mean <- as.numeric(all_job_mean[1, ]$Mean)
runApp()
df2 <- df
job_row <- df %>% filter(Jobs == job)
##Getting the mean of all Jobs
df2[df2 == ">=$208,000"] <- "208000"
all_job_mean <- df2 %>%
filter(Median_Annual_2017 != "—") %>%
mutate(Mean = mean(as.numeric(Median_Annual_2017)))
all_job_mean <- as.numeric(all_job_mean[1, ]$Mean)
runApp()
runApp()
View(df2)
View(all_job_mean)
View(df2)
runApp()
runApp()
View(all_job_mean)
df
df %>%
filter(Median_Annual_2017 != "—")
df %>%
filter(Median_Annual_2017 != "—") %>%
mutate(Mean = mean(as.numeric(Median_Annual_2017)))
all_job_mean <- df %>%
filter(Median_Annual_2017 != "—") %>%
mutate(Mean = mean(as.numeric(Median_Annual_2017)))
runApp()
runApp()
all_job_mean <- df %>% filter(Median_Annual_2017 != "-") %>%
mutate(Mean = mean(as.numeric(Median_Annual_2017)))
all_job_mean <- df %>% filter(Median_Annual_2017 != "-") %>%
mutate(Mean = mean(as.numeric(Median_Annual_2017)))
all_job_mean <- df %>% filter(Median_Annual_2017 != "-") %>%
mutate(Mean = mean(as.numeric(Median_Annual_2017)))
all_job_mean <- df %>%
filter(Median_Annual_2017 != "—") %>%
mutate(Mean = mean(as.numeric(Median_Annual_2017)))
runApp()
runApp()
runApp()
Q
Q()
a <- "1"
rm(a)
rm(df2)
runApp()
View(all_job_mean)
all_job_mean <- all_job_mean %>% mutate(Mean = mean(as.numeric(Median_Annual_2017)))
all_job_mean <- all_job_mean %>% mutate(Mean = mean(as.numeric(Median_Annual_2017)))
all_job_mean <- all_job_mean %>% mutate(Mean = mean(as.numeric(Median_Annual_2017)))
all_job_mean <- df %>% filter(Median_Annual_2017 != "-")
all_job_mean <- df %>% filter(Median_Annual_2017 != "-")
df %>% filter(Median_Annual_2017 != "—")
all_job_mean <- df %>%
filter(Median_Annual_2017 != "—")
runApp()
runApp()
URLdecode("%96")
runApp()
all_job_mean <- df %>% filter(Median_Annual_2017 != URLdecode("%96"))
URLdecode("%96")
df %>% filter(Median_Annual_2017 != URLdecode("%96"))
df %>% filter(Median_Annual_2017 != "--")
df %>% filter(Median_Annual_2017 != "—")
("—" == URLdecode("%96"))
URLdecode("%96")
URLdecode(%E2%80%94)
URLdecode("%E2%80%94")
\u2014
"\u2014"
("—" == "\u2014")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
tags$img(src = "www/Banchelor_Husky.PNG", width = 300, height = 300)
runApp()
runApp()
<img src="www/Banchelor_Husky.PNG" align="left" width="300" height="300"/>a
unique(occ$Entry_Education)
runApp()
runApp()
runApp()
runApp()
View(occ_major)
runApp()
runApp()
runApp()
runApp()
View(extract_row_occ)
View(extract_row_occ)
View(occ_groups)
runApp()
View(occ)
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
updated_text <- "Com"
matched_string <- occ$Jobs[tolower(substring(occ$Jobs, 1, nchar(updated_text))) ==
tolower(updated_text)]
matched_string
runApp()
runApp()
runApp()
runApp()
