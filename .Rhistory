#read in data occupational data by state
original_occupational_data_by_state <- read_excel("data/occupational_data_by_state.xlsx")
#col_types="numeric")
# Get rid of null A_MEAN values
occupational_data_by_state <- filter(original_occupational_data_by_state, A_MEAN != "*" & A_MEAN != "#")
# Format A_MEAN to a number
occupational_data_by_state$A_MEAN <- as.numeric(occupational_data_by_state$A_MEAN)
# Minimum annual mean wage in each state
min_annual_wage_per_state <- select(occupational_data_by_state, ST, STATE, OCC_CODE, OCC_TITLE, TOT_EMP, A_MEAN) %>%
group_by(STATE) %>%
filter(A_MEAN == min(A_MEAN)
)
## Maximum annual mean wage in each state
max_annual_wage_per_state <- select(occupational_data_by_state, ST, STATE, OCC_CODE, OCC_TITLE, TOT_EMP, A_MEAN) %>%
group_by(STATE) %>%
filter(A_MEAN == max(A_MEAN)
)
# Mean of A_MEAN by occupation type (so mean of the annual mean wages) greater than $200,000
Above_200K <- select(occupational_data_by_state, STATE, OCC_CODE, OCC_TITLE, TOT_EMP, A_MEAN) %>%
group_by(OCC_TITLE) %>%
summarise(MEAN = mean(A_MEAN)) %>%
filter(MEAN >= 200000)
# Mean of A_MEAN by occupation type (so mean of the annual mean wages) between $150,000 and $199,999
Between_150K_to_199K <- select(occupational_data_by_state, STATE, OCC_CODE, OCC_TITLE, TOT_EMP, A_MEAN) %>%
group_by(OCC_TITLE) %>%
summarise(MEAN = mean(A_MEAN)) %>%
filter(MEAN >= 150000 & MEAN <= 199999)
# Mean of A_MEAN by occupation type (so mean of the annual mean wages) between $100,000 and $149,999
# This one might need to be split again
Between_100K_to_149K <- select(occupational_data_by_state, STATE, OCC_CODE, OCC_TITLE, TOT_EMP, A_MEAN) %>%
group_by(OCC_TITLE) %>%
summarise(MEAN = mean(A_MEAN)) %>%
filter(MEAN >= 100000 & MEAN <= 149999)
# Mean of A_MEAN by occupation type (so mean of the annual mean wages) between $50,000 and $99,999
Between_99K_to_50K <- select(occupational_data_by_state, STATE, OCC_CODE, OCC_TITLE, TOT_EMP, A_MEAN) %>%
group_by(OCC_TITLE) %>%
summarise(MEAN = mean(A_MEAN)) %>%
filter(MEAN >= 50000 & MEAN <= 99999)
# Mean of A_MEAN by occupation type (so mean of the annual mean wages) between $25,000 and $49,999
Between_49K_to_25K <- select(occupational_data_by_state, STATE, OCC_CODE, OCC_TITLE, TOT_EMP, A_MEAN) %>%
group_by(OCC_TITLE) %>%
summarise(MEAN = mean(A_MEAN)) %>%
filter(MEAN >= 25000 & MEAN <= 49999)
# Mean of A_MEAN by occupation type (so mean of the annual mean wages) less than $24,999
Less_than_24K <- select(occupational_data_by_state, STATE, OCC_CODE, OCC_TITLE, TOT_EMP, A_MEAN) %>%
group_by(OCC_TITLE) %>%
summarise(MEAN = mean(A_MEAN)) %>%
filter(MEAN <= 24999)
library(dplyr)
library(dplyr)
#read in data occupational data by state
original_occupational_data_by_state <- read_excel("data/occupational_data_by_state.xlsx")
#col_types="numeric")
# Get rid of null A_MEAN values
occupational_data_by_state <- filter(original_occupational_data_by_state, A_MEAN != "*" & A_MEAN != "#")
# Format A_MEAN to a number
occupational_data_by_state$A_MEAN <- as.numeric(occupational_data_by_state$A_MEAN)
# Minimum annual mean wage in each state
min_annual_wage_per_state <- select(occupational_data_by_state, ST, STATE, OCC_CODE, OCC_TITLE, TOT_EMP, A_MEAN) %>%
group_by(STATE) %>%
filter(A_MEAN == min(A_MEAN)
)
## Maximum annual mean wage in each state
max_annual_wage_per_state <- select(occupational_data_by_state, ST, STATE, OCC_CODE, OCC_TITLE, TOT_EMP, A_MEAN) %>%
group_by(STATE) %>%
filter(A_MEAN == max(A_MEAN)
)
# Mean of A_MEAN by occupation type (so mean of the annual mean wages) greater than $200,000
Above_200K <- select(occupational_data_by_state, STATE, OCC_CODE, OCC_TITLE, TOT_EMP, A_MEAN) %>%
group_by(OCC_TITLE) %>%
summarise(MEAN = mean(A_MEAN)) %>%
filter(MEAN >= 200000)
# Mean of A_MEAN by occupation type (so mean of the annual mean wages) between $150,000 and $199,999
Between_150K_to_199K <- select(occupational_data_by_state, STATE, OCC_CODE, OCC_TITLE, TOT_EMP, A_MEAN) %>%
group_by(OCC_TITLE) %>%
summarise(MEAN = mean(A_MEAN)) %>%
filter(MEAN >= 150000 & MEAN <= 199999)
# Mean of A_MEAN by occupation type (so mean of the annual mean wages) between $100,000 and $149,999
# This one might need to be split again
Between_100K_to_149K <- select(occupational_data_by_state, STATE, OCC_CODE, OCC_TITLE, TOT_EMP, A_MEAN) %>%
group_by(OCC_TITLE) %>%
summarise(MEAN = mean(A_MEAN)) %>%
filter(MEAN >= 100000 & MEAN <= 149999)
# Mean of A_MEAN by occupation type (so mean of the annual mean wages) between $50,000 and $99,999
Between_99K_to_50K <- select(occupational_data_by_state, STATE, OCC_CODE, OCC_TITLE, TOT_EMP, A_MEAN) %>%
group_by(OCC_TITLE) %>%
summarise(MEAN = mean(A_MEAN)) %>%
filter(MEAN >= 50000 & MEAN <= 99999)
# Mean of A_MEAN by occupation type (so mean of the annual mean wages) between $25,000 and $49,999
Between_49K_to_25K <- select(occupational_data_by_state, STATE, OCC_CODE, OCC_TITLE, TOT_EMP, A_MEAN) %>%
group_by(OCC_TITLE) %>%
summarise(MEAN = mean(A_MEAN)) %>%
filter(MEAN >= 25000 & MEAN <= 49999)
# Mean of A_MEAN by occupation type (so mean of the annual mean wages) less than $24,999
Less_than_24K <- select(occupational_data_by_state, STATE, OCC_CODE, OCC_TITLE, TOT_EMP, A_MEAN) %>%
group_by(OCC_TITLE) %>%
summarise(MEAN = mean(A_MEAN)) %>%
filter(MEAN <= 24999)
install.packages(‘readxl’)
install.packages("readxl")
# Get rid of null A_MEAN values
occupational_data_by_state <- filter(original_occupational_data_by_state, A_MEAN != "*" & A_MEAN != "#")
original_occupational_data_by_state <- read_excel("data/occupational_data_by_state.xlsx")
#col_types="numeric")
library(readxl)
original_occupational_data_by_state <- read_excel("data/occupational_data_by_state.xlsx")
#col_types="numeric")
setwd("/Users/apple/Documents/Autumn2018/INFO201/info201-final-dane")
# Get rid of null A_MEAN values
occupational_data_by_state <- filter(original_occupational_data_by_state, A_MEAN != "*" & A_MEAN != "#")
original_occupational_data_by_state <- read_excel("data/occupational_data_by_state.xlsx")
#col_types="numeric")
getwd()
original_occupational_data_by_state <- read_excel("data/occupational_data_by_state.xlsx")
#col_types="numeric")
library(dplyr)
library(readxl)
#read in data occupational data by state
original_occupational_data_by_state <- read_excel("data/occupational_data_by_state.xlsx")
#col_types="numeric")
# Get rid of null A_MEAN values
occupational_data_by_state <- filter(original_occupational_data_by_state, A_MEAN != "*" & A_MEAN != "#")
# Format A_MEAN to a number
occupational_data_by_state$A_MEAN <- as.numeric(occupational_data_by_state$A_MEAN)
# Minimum annual mean wage in each state
min_annual_wage_per_state <- select(occupational_data_by_state, ST, STATE, OCC_CODE, OCC_TITLE, TOT_EMP, A_MEAN) %>%
group_by(STATE) %>%
filter(A_MEAN == min(A_MEAN)
)
## Maximum annual mean wage in each state
max_annual_wage_per_state <- select(occupational_data_by_state, ST, STATE, OCC_CODE, OCC_TITLE, TOT_EMP, A_MEAN) %>%
group_by(STATE) %>%
filter(A_MEAN == max(A_MEAN)
)
# Mean of A_MEAN by occupation type (so mean of the annual mean wages) greater than $200,000
Above_200K <- select(occupational_data_by_state, STATE, OCC_CODE, OCC_TITLE, TOT_EMP, A_MEAN) %>%
group_by(OCC_TITLE) %>%
summarise(MEAN = mean(A_MEAN)) %>%
filter(MEAN >= 200000)
# Mean of A_MEAN by occupation type (so mean of the annual mean wages) between $150,000 and $199,999
Between_150K_to_199K <- select(occupational_data_by_state, STATE, OCC_CODE, OCC_TITLE, TOT_EMP, A_MEAN) %>%
group_by(OCC_TITLE) %>%
summarise(MEAN = mean(A_MEAN)) %>%
filter(MEAN >= 150000 & MEAN <= 199999)
# Mean of A_MEAN by occupation type (so mean of the annual mean wages) between $100,000 and $149,999
# This one might need to be split again
Between_100K_to_149K <- select(occupational_data_by_state, STATE, OCC_CODE, OCC_TITLE, TOT_EMP, A_MEAN) %>%
group_by(OCC_TITLE) %>%
summarise(MEAN = mean(A_MEAN)) %>%
filter(MEAN >= 100000 & MEAN <= 149999)
# Mean of A_MEAN by occupation type (so mean of the annual mean wages) between $50,000 and $99,999
Between_99K_to_50K <- select(occupational_data_by_state, STATE, OCC_CODE, OCC_TITLE, TOT_EMP, A_MEAN) %>%
group_by(OCC_TITLE) %>%
summarise(MEAN = mean(A_MEAN)) %>%
filter(MEAN >= 50000 & MEAN <= 99999)
# Mean of A_MEAN by occupation type (so mean of the annual mean wages) between $25,000 and $49,999
Between_49K_to_25K <- select(occupational_data_by_state, STATE, OCC_CODE, OCC_TITLE, TOT_EMP, A_MEAN) %>%
group_by(OCC_TITLE) %>%
summarise(MEAN = mean(A_MEAN)) %>%
filter(MEAN >= 25000 & MEAN <= 49999)
# Mean of A_MEAN by occupation type (so mean of the annual mean wages) less than $24,999
Less_than_24K <- select(occupational_data_by_state, STATE, OCC_CODE, OCC_TITLE, TOT_EMP, A_MEAN) %>%
group_by(OCC_TITLE) %>%
summarise(MEAN = mean(A_MEAN)) %>%
filter(MEAN <= 24999)
View(original_occupational_data_by_state)
View(occupational_data_by_state)
shiny::runApp('~/Documents/Autumn2018/INFO201/a8-app-erin0306/Current_occupation')
getwd()
data <- read_excel("data/occupational_data_by_state.xlsx")
View(data)
typeof(data[6,8])
typeof(data$EMP_PRSE)
runApp('~/Documents/Autumn2018/INFO201/a8-app-erin0306/Current_occupation')
getwd()
data <- read_excel("data/occupational_data_by_state.xlsx")
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
occ_groups <- filter(data, OCC_GROUP == "major")
View(occ_groups)
occ_groups <- filter(data, OCC_GROUP == "major")
runApp('Current_occupation')
runApp('Current_occupation')
library(stringr)
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
occ <- data %>% filter(OCC_GROUP == "detailed")
View(occ)
typeof(occ)
typeof(data)
grouprow <- filter(occ_groups, OCC_TITLE)
grouprow <- filter(occ_groups, OCC_TITLE == testinput)
testinput <- "Business and Financial Operations Occupations"
grouprow <- filter(occ_groups, OCC_TITLE == testinput)
View(grouprow)
teststate <- "Washington"
grouprow <- filter(filter(occ_groups, OCC_TITLE == testinput), STATE == teststate)
occ_code <- substring(grouprow[1,4],1,3)
typeof(occ_code)
testoccdata <- occ %>% filter(STATE == teststate)
%>% filter(str_detect(occ_code))
library(dplyr)
testoccdata <- occ %>% filter(STATE == teststate)
%>% filter(str_detect(occ_code))
testoccdata <- occ %>% filter(STATE == teststate) %>%
filter(str_detect(occ_code))
testoccdata <- occ %>% filter(STATE == teststate) %>%
filter(str_detect(occ_code))
testoccdata <- occ %>% filter(STATE == teststate)
View(testoccdata)
testoccdata <- occ %>% filter(STATE == teststate) %>%
filter(str_detect(OCC_CODE,occ_code))
View(testoccdata)
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
rm(occ_code)
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
rm(*)
rm(list=ls())
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
getwd()
library(dplyr)
library(shiny)
runApp('Current_occupation')
runApp('Current_occupation')
runApp('~/Documents/Autumn2018/INFO201/a8-app-erin0306/Currentwithdashboard')
install.packages(shinydashboard)
install.packages('shinydashboard')
runApp('~/Documents/Autumn2018/INFO201/a8-app-erin0306/Currentwithdashboard')
getwd()
runApp('~/Documents/Autumn2018/INFO201/a8-app-erin0306/Currentwithdashboard')
runApp('Currentwithdashboard')
getwd()
runApp('Currentwithdashboard')
runApp('Currentwithdashboard')
runApp('Currentwithdashboard')
runApp('Currentwithdashboard')
runApp('Currentwithdashboard')
runApp('Currentwithdashboard')
runApp('Currentwithdashboard')
runApp('Currentwithdashboard')
runApp('Currentwithdashboard')
runApp('Currentwithdashboard')
runApp('Currentwithdashboard')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp('Current_occupation')
runApp()
runApp()
runApp()
install.packages(c("broom", "foreign", "haven", "lattice", "MASS", "Matrix", "mgcv", "openssl", "packrat", "processx", "ps", "Rcpp", "readr", "RJSONIO", "rlang", "rsconnect", "survival"))
runApp()
source("server.r", encoding="utf-8")
getwd()
source("server.R", encoding="utf-8")
runApp()
\u2014
"\u2014"
df <- specific_table_information(occ, "Chief executives")
View(df)
df <- occ
job <- "Chief executives"
df[df == ">=$208,000"] <- "208000"
all_job_mean <- df %>%
##filter em dash out
filter(Median_Annual_2017 != "\u2014")
all_job_mean <- all_job_mean %>%
mutate(Mean = mean(as.numeric(Median_Annual_2017)))
all_job_mean <- round(as.numeric(all_job_mean[1, ]$Mean), digits = 0)
employment_2016 <- job_row$Employment_2016
employment_2026 <- job_row$Employment_2026
employment_change <- as.numeric(job_row$Employment_Change_Percent)
median <- job_row$Median_Annual_2017
entry_edu <- job_row$Entry_Education
work_exp <- job_row$Work_Experience
job_row <- df %>% filter(Jobs == job)
##Getting the mean of all Jobs
df[df == ">=$208,000"] <- "208000"
all_job_mean <- df %>%
##filter em dash out
filter(Median_Annual_2017 != "\u2014")
all_job_mean <- all_job_mean %>%
mutate(Mean = mean(as.numeric(Median_Annual_2017)))
all_job_mean <- round(as.numeric(all_job_mean[1, ]$Mean), digits = 0)
employment_2016 <- job_row$Employment_2016
employment_2026 <- job_row$Employment_2026
employment_change <- as.numeric(job_row$Employment_Change_Percent)
median <- job_row$Median_Annual_2017
entry_edu <- job_row$Entry_Education
work_exp <- job_row$Work_Experience
job_row
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
rsconnect::setAccountInfo(name='npham24', token='D89457ADBD4D046851495DD6078B097A', secret='DP5RsU4seOIZp/AdZiqw37R1vDZcPWPQAXXxpfl0')
runApp()
runApp()
getwd()
runApp()
